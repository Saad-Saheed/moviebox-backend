// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String?
  lastName    String?
  email       String      @unique
  password    String
  phoneNumber String?     @unique
  favorites   Favorite[]
  watchlist   Watchlist[]
  ratings     Rating[]
  reviews     Review[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  movieId   Int // TMDB movie ID
  createdAt DateTime @default(now())
}

model Watchlist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  movieId   Int
  createdAt DateTime @default(now())
  // userId and movieId together can be used to ensure uniqueness
  // e.g. a user can only have one entry for a specific movie in their watchlist
  @@unique([userId, movieId])
  // This ensures that a user cannot add the same movie to their watchlist multiple times
}

model Rating {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  movieId   Int
  rating    Int // e.g. 1-10 scale
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  movieId   Int
  review    String
  createdAt DateTime @default(now())
}
